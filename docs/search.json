[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Strength of Materials Problem Exercises",
    "section": "",
    "text": "Welcome to Demo Site\nWelcome to this demonstration site of the Strength of Materials Open Problem Exercises companion to the Strength of Materials Open Textbook.\nAt this time, we are simply using this site as a demonstration and shell for our ongoing work. The intent is to demonstrate a more traditional static style problem exercise pack along with dynamic versions which allow students to quickly check answers and receive basic feedback, and/or to input their math in an interactive interface which will provide them with targeted feedback based on their atempted solution.\nThis work is still very much in progress and you may find bugs. We would welcome any input or feedback you have about this. Thanks!"
  },
  {
    "objectID": "problem1static.html#problem-statement",
    "href": "problem1static.html#problem-statement",
    "title": "Static Problem Statement",
    "section": "Problem Statement",
    "text": "Problem Statement\nA city planner is installing a new traffic light. Light A weighs 65 lb, while lights B and C weigh 50 lb each. The post at O has a hollow circular cross-section with an outer diameter of 5 inches and a wall thickness of 0.2 inches. Please calculate the magnitude of the maximum combined stress in the post. You may ignore the weight of the post.\n\n\n\nFigure 1: Three traffic light installation with loads"
  },
  {
    "objectID": "problem1dynamicsubmit.html#problem-image",
    "href": "problem1dynamicsubmit.html#problem-image",
    "title": "Dynamic Problem Statement",
    "section": "Problem Image",
    "text": "Problem Image\n\n\n\nFigure 1: Three traffic light installation with loads\n\n\n#| standalone: true\n#| viewerHeight: 600\n#| components: [viewer]\n\nfrom shiny import App, render, ui, reactive\nimport random\nimport asyncio\nimport io\nimport math\nfrom datetime import datetime\nfrom pathlib import Path\n\nproblem_ID=\"1\"\nlight_a=reactive.Value(\"__\")\nlights_bc=reactive.Value(\"__\")\nattempts=[\"Timestamp,Attempt,Answer,Feedback\\n\"]\n\napp_ui = ui.page_fluid(\n    ui.markdown(\"**Please enter your ID number from your instructor and click to generate your problem**\"),\n    ui.input_text(\"ID\",\"\", placeholder=\"Enter ID Number Here\"),\n    ui.input_action_button(\"generate_problem\", \"Generate Problem\", class_=\"btn-primary\"),\n    ui.markdown(\"**Problem Statement**\"),\n    ui.output_ui(\"ui_problem_statement\"),\n    ui.input_text(\"answer\",\"Your Answer in units of psi\", placeholder=\"Please enter your answer\"),\n    ui.input_action_button(\"submit\", \"Submit Answer\", class_=\"btn-primary\"),\n    ui.download_button(\"download\", \"Download File to Submit\", class_=\"btn-success\"),\n)\n\n\ndef server(input, output, session):\n    @output\n    @render.ui\n    def ui_problem_statement():\n        return[ui.markdown(f\"A city planner is installing a new traffic light. Light A weighs {light_a()} lb, while lights B and C weigh {lights_bc()} lb each. The post at O has a hollow circular cross-section with an outer diameter of 5 inches and a wall thickness of 0.2 inches. Please calculate the magnitude of the maximum combined stress in the post. You may ignore the weight of the post.\")]\n    \n    @reactive.Effect\n    @reactive.event(input.generate_problem)\n    def randomize_vars():\n        random.seed(input.ID())\n        light_a.set(round(65+65*(.5-random.random())*.2))\n        lights_bc.set(round(50+50*(.5-random.random())*.2))\n\n    @reactive.Effect\n    @reactive.event(input.submit)\n    def _():\n        instr= (light_a()+2*lights_bc()/math.pi*(2.5**2 - 2.3**2))+ ((-1*lights_bc()*7- lights_bc()*11 - light_a()*15)*12*2.5)/ ((math.pi/4)*(2.5**4 - 2.3**4))\n        #check=math.isclose(float(input.answer()),instr,rel_tol=0.001)\n        if math.isclose(float(input.answer()),instr,rel_tol=0.001):\n           check=\"*Correct*\"\n        else:\n           check=\"*Not Correct.*\"\n        \n        if check==\"*Not Correct.*\" and math.isclose(abs(float(input.answer())),abs(instr),rel_tol=0.001):\n           extra_check=\"An extra check says you may have a sign error.\"\n        else:\n           extra_check=\"\"\n        #extra_check = \"An extra check says you may have a sign error.\" if math.isclose(abs(input.answer()),abs(instr,rel_tol=0.001)) else \"\"\n        feedback=ui.markdown(f\"Your answer of {input.answer()} is {check} {extra_check} For reference in debugging this, the calculated instructor answer is {instr}\")\n        attempts.append(f\"{datetime.now()}, {input.submit()},{input.answer()},{check}\\n\")\n        m=ui.modal(\n          feedback,\n          title=\"Feedback\",\n          easy_close=True\n        )\n        ui.modal_show(m)\n        \n    @session.download(\n        filename=lambda: f\"Problem_Log-{problem_ID}-{input.ID()}.csv\"\n    )\n    async def download():\n        # This version uses a function to generate the filename. It also yields data\n        # multiple times.\n        await asyncio.sleep(0.25)\n        yield f\"{problem_ID}_{input.submit()}_{input.ID()}\\n\"\n        yield ''.join(attempts)\n           \n\napp = App(app_ui, server)"
  },
  {
    "objectID": "testing.html",
    "href": "testing.html",
    "title": "1  Shinylive in Quarto example",
    "section": "",
    "text": "This is a Shinylive application embedded in a Quarto doc.\n#| standalone: true\n\nfrom shiny import *\n\napp_ui = ui.page_fluid(\n    ui.input_slider(\"n\", \"N\", 0, 100, 40),\n    ui.output_text_verbatim(\"txt\"),\n)\n\ndef server(input, output, session):\n    @output\n    @render.text\n    def txt():\n        return f\"The value of n*2 is {input.n() * 2}\"\n\napp = App(app_ui, server)"
  },
  {
    "objectID": "summary.html",
    "href": "summary.html",
    "title": "2  Summary",
    "section": "",
    "text": "In summary, this book has no content whatsoever."
  }
]